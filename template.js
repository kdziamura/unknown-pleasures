// Generated by CoffeeScript 1.7.1
var createNode;

createNode = (function() {
  function createNode(wrapper, template) {
    this.storage = {};
    this.el = this.parseQuery(wrapper);
    this.renderTemplate(template, this.el);
  }

  createNode.prototype.renderTemplate = function(template, parentNode) {
    var command, commands, currentNode, query, save, _i, _len, _ref, _results;
    commands = template.split(/(\+|\>|\^)/);
    currentNode = null;
    _results = [];
    for (_i = 0, _len = commands.length; _i < _len; _i++) {
      command = commands[_i];
      switch (command) {
        case '+':
          _results.push(false);
          break;
        case '>':
          _results.push(parentNode = currentNode);
          break;
        case '^':
          _results.push(parentNode = parentNode.parentNode);
          break;
        default:
          _ref = command.split('$'), query = _ref[0], save = _ref[1];
          currentNode = this.parseQuery(query);
          this.storage[save] = currentNode;
          _results.push(parentNode.appendChild(currentNode));
      }
    }
    return _results;
  };

  createNode.prototype.parseQuery = function(query) {
    var attr, c, elem, node, parseAttr, token, tokens, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
    tokens = query.split(/(?=\.)|(?=#)|(?=\[)/);
    elem = {
      tag: 'div',
      id: null,
      classes: [],
      attrs: []
    };
    parseAttr = function(token) {
      var attr;
      attr = token.slice(1, -1).split('=');
      attr[0] = attr[0].trim();
      attr[1] = attr[1].trim();
      attr[1] = attr[1].replace(/"/g, '');
      return attr;
    };
    for (_i = 0, _len = tokens.length; _i < _len; _i++) {
      token = tokens[_i];
      switch (token[0]) {
        case '#':
          elem.id = token.slice(1);
          break;
        case '.':
          elem.classes.push(token.slice(1));
          break;
        case '[':
          elem.attrs.push(parseAttr(token));
          break;
        default:
          elem.tag = token;
      }
    }
    node = document.createElement(elem.tag);
    if (elem.id) {
      node.id = elem.id;
    }
    _ref = elem.classes;
    for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
      c = _ref[_j];
      node.classList.add(c);
    }
    _ref1 = elem.attrs;
    for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
      attr = _ref1[_k];
      node.setAttribute(attr[0], attr[1]);
    }
    return node;
  };

  return createNode;

})();

//# sourceMappingURL=template.map
